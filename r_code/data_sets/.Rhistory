s <- vector(mode = 'list') # Initialization of projection axes
sample <- sample(n)
for (k in 1 : (K-1)) {
l[[k]] <- sample[(k - 1) * L + 1 : L]
}
l[[K]] <- sample[(K - 1) * L + 1 : (L + (length(sample) - K * L))]
lambda <- 0.83
l <- vector(mode = 'list')
s <- vector(mode = 'list') # Initialization of projection axes
sample <- sample(n)
for (k in 1 : (K-1)) {
l[[k]] <- sample[(k - 1) * L + 1 : L]
}
l[[K]] <- sample[(K - 1) * L + 1 : (L + (length(sample) - K * L))]
for(k in 1 : K){
s[[k]] <- cpca(sigma[l[[k]]], lambda = lambda)
}
s[[1]]
s[[5]]
s[[6]]
s[[8]]
s[[123]]
s[[10]]
l <- vector(mode = 'list')
s <- vector(mode = 'list') # Initialization of projection axes
sample <- sample(n)
for (k in 1 : (K-1)) {
l[[k]] <- sample[(k - 1) * L + 1 : L]
}
l[[K]] <- sample[(K - 1) * L + 1 : (L + (length(sample) - K * L))]
for(k in 1 : K){
s[[k]] <- cpca(sigma[l[[k]]], lambda = lambda)
}
lambda = 0.75
l <- vector(mode = 'list')
s <- vector(mode = 'list') # Initialization of projection axes
sample <- sample(n)
for (k in 1 : (K-1)) {
l[[k]] <- sample[(k - 1) * L + 1 : L]
}
l[[K]] <- sample[(K - 1) * L + 1 : (L + (length(sample) - K * L))]
for(k in 1 : K){
s[[k]] <- cpca(sigma[l[[k]]], lambda = lambda)
}
s[[1]]
s[[2]]
s[[3]]
s[[6]]
s[[10]]
B <- numeric(20)
for (i in 1 : 20) {
clustering <- mc2pca(X, 10, lambda = 0.75, 200, 0.01)
B[i] <- external_validation(clustering, ground_truth, method = 'purity')
}
mean(B)
B
ggplot(c(8,8))
ggplot2
ggplot2::ggplot(c(8,8))
ClusterR::external_validation(c(1,1), c(1, 1))
ClusterR::external_validation(c(1,2), c(1, 2))
ClusterR::external_validation(c(1,2, 3), c(1, 2, 3, 3))
ClusterR::external_validation(c(1,2, 3), c(1, 2, 2))
ClusterR::external_validation(c(1,2, 3, 2), c(1, 2, 2, 2))
ggplot2
pwd()
getwd()
a = function(){}
a
source('/Users/angellopezoriona/Library/Mobile Documents/com~apple~CloudDocs/git_hub/PhD_degree/r_code/functions/kmeans_function.R')
source('/Users/angellopezoriona/Library/Mobile Documents/com~apple~CloudDocs/git_hub/PhD_degree/r_code/functions/varma_coef.R')
getwd()
R.home(component = "home")
path.expand("~")
R.home(component = "home")
ggplot()
Sys.getenv("R_HOME")
externalRefMethod
# Lets check the approach generalising the Piccolos distance with p-values
# Loading the first 4 cluster from the Libras dataset
ground_truth <- c(rep(1, 24), rep(2, 24), rep(3, 24), rep(4, 24))
S <- vector(mode = "list", length = nrow(libras))
# S is going to contain each MTS with its label
for (i in 1 : length(S)) {
# S[[i]] <- pendigits[i,]
S1 <- libras[i, c(seq(1, 90, by = 2), 91)]
S2 <- libras[i, c(seq(2, 90, by = 2), 91)]
S[[i]] <- rbind(as.numeric(S1), as.numeric(S2))
}
save(S, file = 'libras.RData')
M <- vector(mode = "list", length = length(S))
for (i in 1:length(S)) {
M[[i]] <- S[[i]][,seq(1, 45)]
}
R <- list()
for (i in 1 : 96) {
R[[i]] <- M[[i]]
}
length(R)
dim(R[[1]])
# Lets check the approach generalising the Piccolos distance with p-values
# Loading the first 4 cluster from the Libras dataset
ground_truth <- c(rep(1, 24), rep(2, 24), rep(3, 24), rep(4, 24))
S <- vector(mode = "list", length = nrow(libras))
# S is going to contain each MTS with its label
for (i in 1 : length(S)) {
# S[[i]] <- pendigits[i,]
S1 <- libras[i, c(seq(1, 90, by = 2), 91)]
S2 <- libras[i, c(seq(2, 90, by = 2), 91)]
S[[i]] <- rbind(as.numeric(S1), as.numeric(S2))
}
save(S, file = 'libras.RData')
M <- vector(mode = "list", length = length(S))
for (i in 1:length(S)) {
M[[i]] <- S[[i]][,seq(1, 45)]
}
R <- list()
for (i in 1 : 96) {
R[[i]] <- t(M[[i]])
}
varma_coefs(R[[1]])
varma_coefs(R)
varma(R[[1]], p = 1)
VARMA(R[[1]], p = 1)
c <- VARMA(R[[1]], p = 1)
c$coef
c$data
c$secoef
c$Phi
c
c <- VARMA(R[[1]], p = 1)
c$residuals
c$MAorder
c$bic
c$aic
coefs <- list()
c <- VARMA(R[[1]], p = 1)
c$coef
as.vector(c$coef)
coefs <- list()
v1 <- varma(R[[1]], p = 1)
m1 <- rbind(as.vector(c$coef), as.vector(c$secoef))
for (i in 1 : 96) {
v1 <- VARMA(R[[i]], p = 1)
m1 <- rbind(as.vector(c$coef), as.vector(c$secoef))
}
v1 <- VARMA(R[[1]], p = 1)
m1 <- rbind(as.vector(c$coef), as.vector(c$secoef))
m1
VARMA(R[[1]], p = 1)
m1
v1$coef
for (i in 1 : 96) {
v1 <- VARMA(R[[i]], p = 1)
coefs[[i]] <- rbind(as.vector(c$coef), as.vector(c$secoef))
}
VARMA(M[[1]], p = 1)
VARMA(t(M[[1]]), p = 1)
VARMA(t(M[[10]]), p = 1)
VARMA(t(R[[10]]), p = 1)
VARMA((R[[10]]), p = 1)
VARMA(t(M[[95]]), p = 1)
VARMA(t(M[[43]]), p = 1)
VARMA(t(M[[25]]), p = 1)
VARMA(t(M[[15]]), p = 1)
VARMA(t(M[[12]]), p = 1)
VARMA(t(M[[29]]), p = 1)
VARMA(t(M[[39]]), p = 1)
VARMA(t(M[[57]]), p = 1)
VARMA(t(M[[70]]), p = 1)
source('/Users/angellopezoriona/Library/Mobile Documents/com~apple~CloudDocs/git_hub/PhD_degree/r_code/functions/kmeans_function.R')
source('/Users/angellopezoriona/Library/Mobile Documents/com~apple~CloudDocs/git_hub/PhD_degree/r_code/functions/varma_coef.R')
source('/Users/angellopezoriona/Library/Mobile Documents/com~apple~CloudDocs/git_hub/PhD_degree/r_code/functions/listTomatrix.R')
libras <- load('libras.RData')
M <- list(length = length(S))
for (i in 1:length(S)) {
M[[i]] <- t(S[[i]])
}
ground_truth_libras <- numeric(length(Y))
for (j in 1 : length(Y)) {
ground_truth_libras[j] <- S[[j]][1, 46]
}
M[[1]]
VARMA(M[[1]], p = 1)
VARMA(M[[23]], p = 1)
VARMA(M[[20]], p = 1)
VARMA(M[[21]], p = 1)
VARMA(M[[22]], p = 1)
VARMA(M[[23]], p = 1)
VARMA(M[[24]], p = 1)
VARMA(M[[12]], p = 1)
VARMA(M[[13]], p = 1)
VARMA(M[[14]], p = 1)
VARMA(M[[15]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[28]], p = 1)
VARMA(M[[37]], p = 1)
VARMA(M[[37]], p = 1)
VARMA(M[[45]], p = 1)
VARMA(M[[46]], p = 1)
VARMA(M[[70]], p = 1)
VARMA(M[[71]], p = 1)
VARMA(M[[50]], p = 1)
VARMA(M[[51]], p = 1)
VARMA(M[[52]], p = 1)
VARMA(M[[53]], p = 1)
VARMA(M[[54]], p = 1)
VARMA(M[[80]], p = 1)
VARMA(M[[81]], p = 1)
VARMA(M[[82]], p = 1)
VARMA(M[[83]], p = 1)
VARMA(M[[84]], p = 1)
VARMA(M[[85]], p = 1)
VARMA(M[[35]], p = 1)
ground_truth <- c(rep(1, 24), rep(2, 24), rep(3, 24), rep(4, 24))
S <- vector(mode = "list", length = nrow(libras))
# S is going to contain each MTS with its label
for (i in 1 : length(S)) {
# S[[i]] <- pendigits[i,]
S1 <- libras[i, c(seq(1, 90, by = 2), 91)]
S2 <- libras[i, c(seq(2, 90, by = 2), 91)]
S[[i]] <- rbind(as.numeric(S1), as.numeric(S2))
}
save(S, file = 'libras.RData')
M <- vector(mode = "list", length = length(S))
for (i in 1:length(S)) {
M[[i]] <- S[[i]][,seq(1, 45)]
}
R <- list()
for (i in 1 : 96) {
R[[i]] <- t(M[[i]])
}
R[[35]]
VARMA(R[[35]], p = 1)
libras <- load('libras.RData')
libras <- read.csv('libras.txt', header = F)
colnames(libras) <- NULL
# We have to obtain 360 MTS of length 45, each one with a label from 1 to 15 (there are 15 clusters)
S <- vector(mode = "list", length = nrow(libras))
# S is going to contain each MTS with its label
for (i in 1 : length(S)) {
# S[[i]] <- pendigits[i,]
S1 <- libras[i, c(seq(1, 90, by = 2), 91)]
S2 <- libras[i, c(seq(2, 90, by = 2), 91)]
S[[i]] <- rbind(as.numeric(S1), as.numeric(S2))
}
save(S, file = 'libras.RData')
# Fuzzy C-means and clustering validation
# Removing the labels from S
M <- vector(mode = "list", length = length(S))
for (i in 1:length(S)) {
M[[i]] <- S[[i]][,seq(1, 45)]
}
M[[1]]
M[[35]]
libras <- load('libras.RData')
M <- list(length = length(S))
for (i in 1:length(S)) {
M[[i]] <- t(S[[i]])
}
M[[1]]
libras <- load('libras.RData')
M <- list(length = length(S))
for (i in 1:length(S)) {
M[[i]] <- t(S[[i]][1:45,])
}
libras <- load('libras.RData')
M <- list(length = length(S))
for (i in 1:length(S)) {
M[[i]] <- t(S[[i]][1:45,])
}
libras <- load('libras.RData')
M <- list(length = length(S))
for (i in 1:length(S)) {
M[[i]] <- t(S[[i]])[1:45,]
}
M[[1]]
VARMA(M[[1]], p = 1)
VARMA(M[[2]], p = 1)
VARMA(M[[3]], p = 1)
VARMA(M[[4]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[30]], p = 1)
VARMA(M[[38]], p = 1)
VARMA(M[[43]], p = 1)
VARMA(M[[47]], p = 1)
VARMA(M[[50]], p = 1)
VARMA(M[[51]], p = 1)
VARMA(M[[55]], p = 1)
VARMA(M[[56]], p = 1)
VARMA(M[[60]], p = 1)
VARMA(M[[65]], p = 1)
VARMA(M[[68]], p = 1)
VARMA(M[[69]], p = 1)
VARMA(M[[70]], p = 1)
VARMA(M[[71]], p = 1)
VARMA(M[[72]], p = 1)
VARMA(M[[73]], p = 1)
VARMA(M[[74]], p = 1)
VARMA(M[[75]], p = 1)
VARMA(M[[77]], p = 1)
VARMA(M[[78]], p = 1)
VARMA(M[[79]], p = 1)
VARMA(M[[80]], p = 1)
VARMA(M[[81]], p = 1)
VARMA(M[[82]], p = 1)
VARMA(M[[83]], p = 1)
VARMA(M[[84]], p = 1)
VARMA(M[[85]], p = 1)
VARMA(M[[86]], p = 1)
VARMA(M[[87]], p = 1)
VARMA(M[[88]], p = 1)
VARMA(M[[89]], p = 1)
VARMA(M[[90]], p = 1)
VARMA(M[[91]], p = 1)
VARMA(M[[92]], p = 1)
VARMA(M[[93]], p = 1)
VARMA(M[[94]], p = 1)
VARMA(M[[95]], p = 1)
VARMA(M[[96]], p = 1)
VARMA(M[[97]], p = 1)
VARMA(M[[98]], p = 1)
VARMA(M[[15]], p = 1)
VARMA(M[[16]], p = 1)
VARMA(M[[17]], p = 1)
VARMA(M[[18]], p = 1)
VARMA(M[[95]], p = 1)
VARMA(M[[22]], p = 1)
VARMA(M[[15]], p = 1)
VARMA(M[[10]], p = 1)
VARMA(M[[5]], p = 1)
VARMA(M[[97]], p = 1)
VARMA(M[[87]], p = 1)
VARMA(M[[80]], p = 1)
VARMA(M[[88]], p = 1)
VARMA(M[[89]], p = 1)
VARMA(M[[1]], p = 1)
VARMA(M[[2]], p = 1)
VARMA(M[[3]], p = 1)
VARMA(M[[4]], p = 1)
VARMA(M[[5]], p = 1)
VARMA(M[[35]], p = 1)
VARMA(M[[36]], p = 1)
VARMA(M[[39]], p = 1)
VARMA(M[[40]], p = 1)
VARMA(M[[41]], p = 1)
VARMA(M[[49]], p = 1)
VARMA(M[[55]], p = 1)
VARMA(M[[97]], p = 1)
VARMA(M[[35]], p = 1)
VARMA(M[[3]], p = 1)
VARMA(M[[20]], p = 1)
VARMA(M[[24]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[1]], p = 1)
VARMA(M[[1]], p = 1)
VARMA(M[[2]], p = 1)
VARMA(M[[3]], p = 1)
VARMA(M[[4]], p = 1)
VARMA(M[[5]], p = 1)
VARMA(M[[6]], p = 1)
VARMA(M[[7]], p = 1)
VARMA(M[[15]], p = 1)
VARMA(M[[23]], p = 1)
VARMA(M[[24]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[26]], p = 1)
VARMA(M[[27]], p = 1)
VARMA(M[[35]], p = 1)
VARMA(M[[45]], p = 1)
VARMA(M[[55]], p = 1)
VARMA(M[[67]], p = 1)
VARMA(M[[70]], p = 1)
VARMA(M[[88]], p = 1)
VARMA(M[[77]], p = 1)
VARMA(M[[72]], p = 1)
VARMA(M[[73]], p = 1)
VARMA(M[[74]], p = 1)
VARMA(M[[75]], p = 1)
VARMA(M[[76]], p = 1)
VARMA(M[[77]], p = 1)
VARMA(M[[78]], p = 1)
VARMA(M[[85]], p = 1)
VARMA(M[[96]], p = 1)
VARMA(M[[97]], p = 1)
VARMA(M[[99]], p = 1)
VARMA(M[[130]], p = 1)
VARMA(M[[98]], p = 1)
VARMA(M[[105]], p = 1)
VARMA(M[[95]], p = 1)
VARMA(M[[24]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[1]], p = 1)
VARMA(M[[24]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[39]], p = 1)
VARMA(M[[48]], p = 1)
VARMA(M[[49]], p = 1)
VARMA(M[[50]], p = 1)
VARMA(M[[47]], p = 1)
VARMA(M[[46]], p = 1)
VARMA(M[[45]], p = 1)
VARMA(M[[44]], p = 1)
VARMA(M[[43]], p = 1)
VARMA(M[[42]], p = 1)
VARMA(M[[41]], p = 1)
VARMA(M[[40]], p = 1)
VARMA(M[[39]], p = 1)
VARMA(M[[38]], p = 1)
VARMA(M[[39]], p = 1)
VARMA(M[[35]], p = 1)
VARMA(M[[34]], p = 1)
VARMA(M[[33]], p = 1)
VARMA(M[[32]], p = 1)
VARMA(M[[31]], p = 1)
VARMA(M[[30]], p = 1)
VARMA(M[[29]], p = 1)
VARMA(M[[28]], p = 1)
VARMA(M[[27]], p = 1)
VARMA(M[[26]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[24]], p = 1)
VARMA(M[[20]], p = 1)
VARMA(M[[18]], p = 1)
VARMA(M[[1]], p = 1)
VARMA(M[[9]], p = 1)
VARMA(M[[29]], p = 1)
VARMA(M[[49]], p = 1)
VARMA(M[[60]], p = 1)
VARMA(M[[62]], p = 1)
VARMA(M[[62]], p = 1)
VARMA(M[[68]], p = 1)
VARMA(M[[78]], p = 1)
VARMA(M[[72]], p = 1)
VARMA(M[[73]], p = 1)
VARMA(M[[74]], p = 1)
VARMA(M[[75]], p = 1)
VARMA(M[[76]], p = 1)
VARMA(M[[77]], p = 1)
VARMA(M[[78]], p = 1)
VARMA(M[[79]], p = 1)
VARMA(M[[80]], p = 1)
VARMA(M[[81]], p = 1)
VARMA(M[[82]], p = 1)
VARMA(M[[72]], p = 1)
VARMA(M[[60]], p = 1)
VARMA(M[[55]], p = 1)
VARMA(M[[54]], p = 1)
VARMA(M[[53]], p = 1)
VARMA(M[[50]], p = 1)
VARMA(M[[90]], p = 1)
VARMA(M[[50]], p = 1)
VARMA(M[[51]], p = 1)
VARMA(M[[91]], p = 1)
VARMA(M[[92]], p = 1)
VARMA(M[[97]], p = 1)
VARMA(M[[67]], p = 1)
VARMA(M[[97]], p = 1)
VARMA(M[[1]], p = 1)
VARMA(M[[10]], p = 1)
VARMA(M[[25]], p = 1)
VARMA(M[[49]], p = 1)
VARMA(M[[67]], p = 1)
VARMA(M[[18]], p = 1)
VARMA(M[[28]], p = 1)
VARMA(M[[3]], p = 1)
VARMA(M[[5]], p = 1)
VARMA(M[[7]], p = 1)
VARMA(M[[30]], p = 1)
VARMA(M[[34]], p = 1)
VARMA(M[[37]], p = 1)
VARMA(M[[46]], p = 1)
VARMA(M[[55]], p = 1)
VARMA(M[[70]], p = 1)
VARMA(M[[73]], p = 1)
VARMAsim(100, arlags = 1, phi = (-0.5, 0.5, 0.6, 0.7))
VARMAsim(100, arlags = 1, phi = matrix(c(-0.5, 0.5, 0.6, 0.7)))
VARMAsim(100, arlags = 1, phi = matrix(c(-0.5, 0.5, 0.6, 0.7)), sigma = diag(2))
VARMAsim(100, arlags = 1, phi = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), sigma = diag(2))
a <- VARMAsim(100, arlags = 1, phi = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), sigma = diag(2))
a
a <- VARMAsim(100, arlags = 1, phi = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), sigma = diag(2))$
a <- VARMAsim(100, arlags = 1, phi = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), sigma = diag(2))$series
VARMA(a, p = 1)
a <- VARMAsim(100, malags = 1, theta = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), sigma = diag(2))$series
VARMA(a, p = 1)
a <- VARMAsim(100, malags = 1, arlags = 1, theta = matrix(c(-0.5, 0.5, 0.6, 0.7), phi = matrix(c(-0.5, 0.5, 0.6, 0.7)  nrow = 2), sigma = diag(2))$series
a <- VARMAsim(100, malags = 1, arlags = 1, theta = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), phi = matrix(c(-0.5, 0.5, 0.6, 0.7)  nrow = 2), sigma = diag(2))$series
a <- VARMAsim(100, malags = 1, arlags = 1, theta = matrix(c(-0.5, 0.5, 0.6, 0.7), nrow = 2), phi = matrix(c(-0.5, 0.5, 0.6, 0.7) ,nrow = 2), sigma = diag(2))$series
VARMA(a, p = 1)
M[[1]]
M[[90]]
M[[150]]
VARMA(M[[350]], p = 1)
VARMA(M[[330]], p = 1)
VARMA(M[[320]], p = 1)
VARMA(M[[280]], p = 1)
VARMA(M[[280]], p = 1)
VARMA(M[[260]], p = 1)
VARMA(M[[280]], p = 1)
VARMA(M[[281]], p = 1)
VARMA(M[[282]], p = 1)
VARMA(M[[283]], p = 1)
M[[200]]
M[[280]]
M[[340]]
VARMA(M[[340]], p = 1)
VARMA(M[[90]], p = 1)
VARMA(M[[60]], p = 1)
VARMA(M[[55]], p = 1)
VARMA(M[[90]], p = 1)
VARMA(M[[4]], p = 1)
